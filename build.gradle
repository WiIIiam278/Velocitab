import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'org.ajoberstar.grgit' version '5.2.1'
    id 'maven-publish'
    id 'java'
}

group 'net.william278'
version "$ext.plugin_version${versionMetadata()}"
description "$ext.plugin_description"
defaultTasks 'licenseFormat', 'build'

ext {
    set 'version', version.toString()
    set 'description', description.toString()
}

repositories {
    mavenCentral()
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://repo.william278.net/releases/' }
    maven { url = 'https://jitpack.io/' }
    maven { url = 'https://repo.minebench.de/' }
    maven { url = 'https://maven.elytrium.net/repo/' }
    maven { url = 'https://mvn.exceptionflug.de/repository/exceptionflug-public/' }
}

dependencies {
    compileOnly 'com.velocitypowered:velocity-api:3.2.0-SNAPSHOT'
    compileOnly 'com.velocitypowered:velocity-proxy:3.2.0-SNAPSHOT'
    compileOnly 'io.netty:netty-codec-http:4.1.100.Final'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'io.github.miniplaceholders:miniplaceholders-api:2.0.0'
    compileOnly 'net.william278:PAPIProxyBridge:1.4.2'
    compileOnly 'it.unimi.dsi:fastutil:8.5.12'


    implementation 'org.apache.commons:commons-text:1.11.0'
    implementation 'net.william278:annotaml:2.0.7'
    implementation 'net.william278:DesertWell:2.0.4'
    implementation 'dev.dejvokep:boosted-yaml:1.3.1'
    implementation 'de.themoep:minedown-adventure:1.7.2-SNAPSHOT'
    implementation 'org.bstats:bstats-velocity:3.0.2'

    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

processResources {
    filesMatching(['**/*.json', '**/*.yml']) {
        filter ReplaceTokens as Class, beginToken: '${', endToken: '}',
                tokens: rootProject.ext.properties
    }
}

license {
    header = rootProject.file('HEADER')
    include '**/*.java'
    newLine = true
}

logger.lifecycle("Building Velocitab ${version} by William278")

version rootProject.version
archivesBaseName = "${rootProject.name}"

compileJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'
javadoc.options.addStringOption('Xdoclint:none', '-quiet')

java {
    withSourcesJar()
    withJavadocJar()
}

shadowJar {
    relocate 'org.apache.commons.text', 'net.william278.velocitab.libraries.commons.text'
    relocate 'org.apache.commons.lang3', 'net.william278.velocitab.libraries.commons.lang3'
    relocate 'org.jetbrains', 'net.william278.velocitab.libraries'
    relocate 'org.intellij', 'net.william278.velocitab.libraries'
    relocate 'de.themoep', 'net.william278.velocitab.libraries'
    relocate 'dev.dejvokep.boostedyaml', 'net.william278.velocitab.libraries.boostedyaml'
    relocate 'net.william278.annotaml', 'net.william278.velocitab.libraries.annotaml'
    relocate 'net.william278.desertwell', 'net.william278.velocitab.libraries.desertwell'
    relocate 'org.json', 'net.william278.velocitab.libraries.json'
    relocate 'org.bstats', 'net.william278.velocitab.libraries.bstats'

    dependencies {
        //noinspection GroovyAssignabilityCheck
        exclude dependency(':slf4j-api')
    }

    destinationDirectory.set(file("$rootDir/target"))
    archiveClassifier.set('')
}
jar.dependsOn shadowJar
clean.delete "$rootDir/target"

publishing {
    repositories {
        if (System.getenv("RELEASES_MAVEN_USERNAME") != null) {
            maven {
                name = "william278-releases"
                url = "https://repo.william278.net/releases"
                credentials {
                    username = System.getenv("RELEASES_MAVEN_USERNAME")
                    password = System.getenv("RELEASES_MAVEN_PASSWORD")
                }
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
        if (System.getenv("SNAPSHOTS_MAVEN_USERNAME") != null) {
            maven {
                name = "william278-snapshots"
                url = "https://repo.william278.net/snapshots"
                credentials {
                    username = System.getenv("SNAPSHOTS_MAVEN_USERNAME")
                    password = System.getenv("SNAPSHOTS_MAVEN_PASSWORD")
                }
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            groupId = 'net.william278'
            artifactId = 'velocitab'
            version = "$rootProject.version"
            artifact shadowJar
            artifact javadocJar
            artifact sourcesJar
        }
    }
}

@SuppressWarnings('GrMethodMayBeStatic')
def versionMetadata() {
    // Get if there is a tag for this commit
    def tag = grgit.tag.list().find { it.commit.id == grgit.head().id }
    if (tag != null) {
        return ''
    }

    // Otherwise, get the last commit hash and if it's a clean head
    if (grgit == null) {
        return '-' + System.getenv("GITHUB_RUN_NUMBER") ? 'build.' + System.getenv("GITHUB_RUN_NUMBER") : 'unknown'
    }
    return '-' + grgit.head().abbreviatedId + (grgit.status().clean ? '' : '-indev')
}